version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: uno-tracker-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-uno_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-uno_password}
      POSTGRES_DB: ${POSTGRES_DB:-uno_tracker}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - uno-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-uno_user} -d ${POSTGRES_DB:-uno_tracker}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: uno-tracker-backend
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-uno_user}:${POSTGRES_PASSWORD:-uno_password}@db:5432/${POSTGRES_DB:-uno_tracker}
      
      # JWT Configuration
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-jwt-key-change-in-production}
      
      # OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      
      # URLs
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      FRONTEND_URL_DEV: ${FRONTEND_URL_DEV:-http://localhost:3000}
      BACKEND_URL: ${BACKEND_URL:-http://localhost:8000}
      
      # Security
      COOKIE_SECURE: ${COOKIE_SECURE:-false}
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    networks:
      - uno-network
    depends_on:
      db:
        condition: service_healthy
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
    driver: local

networks:
  uno-network:
    driver: bridge
